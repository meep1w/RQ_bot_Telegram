from aiogram import Bot, Router, F
from aiogram.filters import Command
from aiogram.types import CallbackQuery, Message

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from app.bots.common import child_admin_kb, channels_list_kb
from app.services.channels_simple import delete_channel, list_channels, upsert_channel

router = Router()


# ====== FSM –¥–ª—è –≤–≤–æ–¥–∞ chat_id / @username ======
class AddChatSG(StatesGroup):
    waiting_chat = State()


# ====== /admin ======

@router.message(Command("admin"))
async def child_admin(msg: Message, bot: Bot, **data):
    tenant = data.get("tenant")
    if not tenant:
        return await msg.answer("‚ö†Ô∏è –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ç–µ–Ω–∞–Ω—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ù–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    if msg.from_user.id != tenant["owner_user_id"]:
        return await msg.answer("‚õîÔ∏è –î–æ—Å—Ç—É–ø –∫ /admin —Ç–æ–ª—å–∫–æ —É –≤–ª–∞–¥–µ–ª—å—Ü–∞ —ç—Ç–æ–≥–æ –±–æ—Ç–∞.")

    await msg.answer("–ê–¥–º–∏–Ω –º–µ–Ω—é", reply_markup=child_admin_kb())


# ====== –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é¬ª ======

@router.callback_query(F.data == "child:back")
async def child_back(cb: CallbackQuery, **data):
    tenant = data.get("tenant")
    if not tenant or cb.from_user.id != tenant["owner_user_id"]:
        return await cb.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)

    await cb.message.edit_text("–ê–¥–º–∏–Ω –º–µ–Ω—é")
    await cb.message.edit_reply_markup(reply_markup=child_admin_kb())
    await cb.answer()


# ====== –≠–∫—Ä–∞–Ω ¬´–ß–∞—Ç—ã/–ö–∞–Ω–∞–ª—ã¬ª ======

@router.callback_query(F.data == "child:chats")
async def child_chats(cb: CallbackQuery, **data):
    tenant = data.get("tenant")
    if not tenant or cb.from_user.id != tenant["owner_user_id"]:
        return await cb.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)

    items = await list_channels(tenant["id"])
    await cb.message.edit_text("–ü–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–µ —á–∞—Ç—ã/–∫–∞–Ω–∞–ª—ã:")
    await cb.message.edit_reply_markup(reply_markup=channels_list_kb(items))
    await cb.answer()


# ====== –ü–æ–¥–∫–ª—é—á–∏—Ç—å —á–∞—Ç (–±–µ–∑ /link, —á–µ—Ä–µ–∑ –≤–≤–æ–¥ chat_id/@username) ======

@router.callback_query(F.data == "child:chadd")
async def child_ch_add(cb: CallbackQuery, state: FSMContext, **data):
    tenant = data.get("tenant")
    if not tenant or cb.from_user.id != tenant["owner_user_id"]:
        return await cb.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)

    await state.set_state(AddChatSG.waiting_chat)
    text = (
        "üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–∞—Ç–∞/–∫–∞–Ω–∞–ª–∞\n\n"
        "1) –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–æ–º –≤ –Ω—É–∂–Ω—ã–π —á–∞—Ç/–∫–∞–Ω–∞–ª.\n"
        "2) –ü—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞ *ID* (–Ω–∞–ø—Ä–∏–º–µ—Ä `-1001234567890`) **–∏–ª–∏** `@username` –∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞.\n\n"
        "–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã: /cancel"
    )
    await cb.message.edit_text(text, parse_mode="Markdown")
    await cb.answer()


@router.message(AddChatSG.waiting_chat)
async def add_chat_receive(msg: Message, bot: Bot, state: FSMContext, **data):
    tenant = data.get("tenant")
    if not tenant:
        return await msg.answer("‚ö†Ô∏è –ù–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ç–µ–Ω–∞–Ω—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    # –í–ª–∞–¥–µ–ª–µ—Ü?
    if msg.from_user.id != tenant["owner_user_id"]:
        return await msg.answer("‚õîÔ∏è –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å —á–∞—Ç—ã.")

    raw = (msg.text or "").strip()
    if not raw:
        return await msg.answer("–ü—Ä–∏—à–ª–∏—Ç–µ ID (–Ω–∞–ø—Ä–∏–º–µ—Ä -1001234567890) –∏–ª–∏ @username –∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞.")

    # –û–ø—Ä–µ–¥–µ–ª–∏–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    identifier = None
    if raw.startswith("@"):
        identifier = raw  # username
    else:
        # –ø—Ä–æ–±—É–µ–º –∫–∞–∫ int id
        try:
            identifier = int(raw)
        except ValueError:
            return await msg.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏—à–ª–∏—Ç–µ ID (–Ω–∞–ø—Ä–∏–º–µ—Ä -1001234567890) –∏–ª–∏ @username.")

    # –ü–æ–ª—É—á–∏–º —á–∞—Ç
    try:
        chat = await bot.get_chat(identifier)
    except Exception as e:
        return await msg.answer(
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —á–∞—Ç –ø–æ '{raw}'. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç. –û—à–∏–±–∫–∞: {e}")

    # –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
    try:
        me = await bot.get_me()
        cm = await bot.get_chat_member(chat.id, me.id)
        status = getattr(cm, "status", "")
        if status not in {"administrator", "creator"}:
            return await msg.answer(
                "–ë–æ—Ç –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤ —ç—Ç–æ–º —á–∞—Ç–µ/–∫–∞–Ω–∞–ª–µ.\n"
                "–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ *–∞–¥–º–∏–Ω–æ–º* –∏ –ø—Ä–∏—à–ª–∏—Ç–µ ID/username —Å–Ω–æ–≤–∞.",
                parse_mode="Markdown",
            )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å ‚Äî —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –±–æ—Ç–∞ –Ω–µ—Ç –≤ —á–∞—Ç–µ
        return await msg.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –≤ —á–∞—Ç–µ. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–æ–º –∏ –ø—Ä–∏—à–ª–∏—Ç–µ ID/username —Å–Ω–æ–≤–∞."
        )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    await upsert_channel(tenant["id"], chat.id, chat.title)

    await state.clear()
    items = await list_channels(tenant["id"])
    await msg.answer("‚úÖ –ß–∞—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω! –°–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª—ë–Ω.", reply_markup=channels_list_kb(items))


# ====== –û—Ç–º–µ–Ω–∞ –≤–≤–æ–¥–∞ ======

@router.message(Command("cancel"))
async def add_chat_cancel(msg: Message, state: FSMContext, **data):
    await state.clear()
    await msg.answer("–û—Ç–º–µ–Ω–µ–Ω–æ. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ /admin.")


# ====== –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ ======

@router.callback_query(F.data.startswith("child:chdel:"))
async def child_ch_delete(cb: CallbackQuery, **data):
    tenant = data.get("tenant")
    if not tenant or cb.from_user.id != tenant["owner_user_id"]:
        return await cb.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)

    ch_id = int(cb.data.split(":")[-1])
    await delete_channel(tenant["id"], ch_id)

    items = await list_channels(tenant["id"])
    await cb.message.edit_text("–ü–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–µ —á–∞—Ç—ã/–∫–∞–Ω–∞–ª—ã: (—É–¥–∞–ª–µ–Ω–æ)")
    await cb.message.edit_reply_markup(reply_markup=channels_list_kb(items))
    await cb.answer()
